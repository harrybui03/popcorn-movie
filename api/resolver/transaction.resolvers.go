package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.44

import (
	"PopcornMovie/ent"
	graphql1 "PopcornMovie/graphql"
	"context"
	"fmt"
)

// ID is the resolver for the id field.
func (r *transactionResolver) ID(ctx context.Context, obj *ent.Transaction) (string, error) {
	return obj.ID.String(), nil
}

// User is the resolver for the user field.
func (r *transactionResolver) User(ctx context.Context, obj *ent.Transaction) (*ent.User, error) {
	return obj.Edges.User, nil
}

// Status is the resolver for the status field.
func (r *transactionResolver) Status(ctx context.Context, obj *ent.Transaction) (string, error) {
	panic(fmt.Errorf("not implemented: Status - status"))
}

// Tickets is the resolver for the tickets field.
func (r *transactionResolver) Tickets(ctx context.Context, obj *ent.Transaction) ([]*ent.Ticket, error) {
	return obj.Edges.Tickets, nil
}

// Foods is the resolver for the foods field.
func (r *transactionResolver) Foods(ctx context.Context, obj *ent.Transaction) ([]*ent.FoodOrderLine, error) {
	return obj.Edges.FoodOrderLines, nil
}

// Transaction returns graphql1.TransactionResolver implementation.
func (r *Resolver) Transaction() graphql1.TransactionResolver { return &transactionResolver{r} }

type transactionResolver struct{ *Resolver }
