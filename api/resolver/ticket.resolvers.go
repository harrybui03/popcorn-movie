package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.44

import (
	"PopcornMovie/ent"
	graphql1 "PopcornMovie/graphql"
	"context"
	"fmt"
)

// ID is the resolver for the ID field.
func (r *ticketResolver) ID(ctx context.Context, obj *ent.Ticket) (string, error) {
	return obj.ID.String(), nil
}

// Seat is the resolver for the Seat field.
func (r *ticketResolver) Seat(ctx context.Context, obj *ent.Ticket) (*ent.Seat, error) {
	return obj.Edges.Seat, nil
}

// ShowTime is the resolver for the ShowTime field.
func (r *ticketResolver) ShowTime(ctx context.Context, obj *ent.Ticket) (*ent.ShowTime, error) {
	return obj.Edges.ShowTime, nil
}

// Transaction is the resolver for the Transaction field.
func (r *ticketResolver) Transaction(ctx context.Context, obj *ent.Ticket) (*ent.Transaction, error) {
	return obj.Edges.Transaction, nil
}

// Ticket returns graphql1.TicketResolver implementation.
func (r *Resolver) Ticket() graphql1.TicketResolver { return &ticketResolver{r} }

type ticketResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
func (r *ticketResolver) IsBooked(ctx context.Context, obj *ent.Ticket) (bool, error) {
	panic(fmt.Errorf("not implemented: IsBooked - IsBooked"))
}
